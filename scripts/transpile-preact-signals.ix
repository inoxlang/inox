
const (
    TS_CONFIG_FILE = ./internal/inoxjs/tsconfig.json
    OUTPUT_JS_FILE = ./internal/inoxjs/preact-signals.js
    OUTPUT_DECLARATION_FILE = ./internal/inoxjs/preact-signals.d.ts

    EXPORT_PATTERN =  %`^\s*(export|Object\.defineProperty\(exports).*`
)

manifest {
    permissions: {
        read: %/...
        write: {
            %/tmp/...
            IWD_PREFIX
        }
        delete:  IWD_PREFIX
        use: {
            commands: {
                # TODO: change
                "tsc": {}
                "%/...": {}
            }
        }
    }
}

# remove previous files

fs.rm(OUTPUT_JS_FILE)
fs.rm(OUTPUT_DECLARATION_FILE)

# transpile

assign result err = ex(..5s #tsc -p TS_CONFIG_FILE)

if err? {
    print "failed:" $err
}

print $result

if err? {
    return
}

# remove lines starting with 'export' from the .js file.

js = tostr(fs.read!(OUTPUT_JS_FILE))
js_lines = split!(js, "\n")

var new_js str = ""

for line in js_lines {
    if !(line match $EXPORT_PATTERN) {
        new_js = concat new_js line "\n"
    }
}

update!(OUTPUT_JS_FILE, #replace, new_js)

# remove lines starting with 'export' from the .d.ts file.

decl = tostr(fs.read!(OUTPUT_DECLARATION_FILE))
decl_lines = split!(decl, "\n")

var new_decl str = ""

for line in decl_lines {
    if !(line match $EXPORT_PATTERN) {
        new_decl = concat new_decl line "\n"
    }
}

update!(OUTPUT_DECLARATION_FILE, #replace, new_decl)
